package main

import "fmt"

/*
Функция - это блок инструкций,которые вместе выполняют какую-то определенную задачу. С помощью функций можно многократное вызвать набор этих инстркуций
для решения однотипной задачи не дублируя код

Синтаксис:

func имя_функции (список_параметров)(типы_возвращаемых_значений) {
	выполняемые_инструкции(операторы)
}

Сигнатура функции - это название функции вместе с типами еепараметров и типами возвращаямых значений.

По умолчанию каждая программа на go должна содержать хотя бы одну функцию main, которая является входной точкой приложения. Программа выплняет
только те инструкции,которые определены в функции main.

*/
func main() {
	// f1(1, 2, 1.3, 9.2, 5.3)
	// f2(1, 2, 3, 4, 5)

	//? либо передача среза в качестве параметра
	// f2([]int{1, 2, 3}...)

}

//§ параметры функции
//@ 1. типизация параметров
func f1(x, y int, a, b, c float32) {
	var z = x + y
	var d = a + b + c
	fmt.Println("x + y = ", z)
	fmt.Println("a + b + c = ", d)
}

//@ 2. неопределенное количество параметров и типизация возвращаемеого значения
func f2(numbers ...int) int {
	var sum int = 0
	for i := 0; i < len(numbers); i++ {
		sum = sum + numbers[i]
	}
	fmt.Println(sum)

	return sum
}
